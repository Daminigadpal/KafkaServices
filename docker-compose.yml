version: '3.9'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    # networks:
    #    - my_network
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    ports:
     - 9092:9092
    volumes:
      - ./data/kafka:/var/run/docker.sock
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS= PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR= 1
    # networks:
    #   - my_network

  mongo:
      container_name: mongo
      image: mongo
      ports:
       - 27017:27017
      volumes:
       - ./data/mongo:/data/db
      restart: unless-stopped
  
  orderservices-app1:
       container_name: orderservices-app1
       image : node:18
       build: 
         context: ./orderservices-app1
         dockerfile: Dockerfile
       volumes:
          - ./orderservices-app1:/orderservices-app1
       working_dir: /orderservices-app1
       command: npm start
       ports:
          - 8080:8080
       environment: 
          - PORT=8080
          - MONGO_URL=mongodb+srv://Damini:Saanv!00@cluster0.51e4ypk.mongodb.net/
          - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
          - KAFKA_TOPIC=orders
       depends_on:
           - mongo
           - kafka
      #  networks:
      #      - my_network

  inventoryservices-app2:
         container_name: inventoryservices-app2
         image : node:18
         build: 
          context: ./inventoryservices-app2
          dockerfile: Dockerfile
         volumes:
              - ./inventoryservices-app2:/inventoryservices-app2
         working_dir: /inventoryservices-app2
         command: npm start
         ports:
          - 8081:8080
         environment: 
          - PORT=8081
          - MONGO_URL=mongodb+srv://Damini:Saanv!00@cluster0.51e4ypk.mongodb.net/
          - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
          - KAFKA_TOPIC=orders
          - KAFKA_GROUP_ID=my_Group
         depends_on:
           - mongo
           - kafka
        #  networks:
        #    - my_network
         
  # networks:
  #     my-kafka-network:
  #       driver: 

    

       
    
        


      

 